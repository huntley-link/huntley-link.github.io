OUTPUT = html
PROFILE = 
MAKE_INIT = make_init {${MAKEFILE}}

proc home_url {PROFILE} {
	if {$PROFILE eq {prod}} {return https://stephen.huntley.link}
	return http://localhost:8000
}
MAKE_EVAL HOME_URL = [home_url {$(PROFILE)}]

proc make_init {MAKEFILE} {
	cd [file dir $MAKEFILE]
}

proc book_chapters {} {
	set qyml {.book.chapters = ["index.qmd"}
	set qfiles [split [exec find -not -path "*/.*" -not -name "index.qmd" -name "*.qmd"] \n]
	set qfiles [lsort -dic $qfiles]
	
	foreach qf $qfiles {
		set qf [string range [lindex $qf 0] 2 end]
		append qyml , \" $qf \"
	}
	append qyml ]
	
	set quarto_yml [exec yq {del(.book.chapters)} | yq $qyml < _quarto.yml]
	set f [open _quarto.yml w]
	puts $f $quarto_yml
	close $f
}

proc blog_sidebar {} {
	foreach qf [glob -noc */*/*.qmd */*/*/*.qmd] {
		set qdir [file tail [file dir $qf]]
		if {[string index $qdir 0] eq {_}} {continue}
		set f [open $qf]
		set q [read $f]
		close $f
		set yaml null
		regexp {\---\n(.+)\n---\n} $q trash yaml
		set date [exec yq .date << $yaml]
		if {$date eq {null}} {
			set date [clock format [file mtime $qf]]
		}
		set scandate [clock scan $date]
		set year [clock format $scandate -format %Y]
		set month [string trim [clock format $scandate -format %N]]
		incr yearArray($year)
		incr monthArray($year,$month)
		
		lappend dateArray($scandate) $qf
	}
	
	set years [lsort [array names yearArray]]
	foreach year $years {
		append yearJSONArray($year) {"section": "} "$year ($yearArray($year))" "\",\"contents\": \["
	}
	set months [lsort -dic [array names monthArray]]
	foreach month $months {
		set monthname [clock format [clock scan [lindex [split $month ,] 1]/1/2000] -format %b]
		append monthJSONArray($month) {"section": "} "$monthname ($monthArray($month))" {","contents": [}
	}
	
	set dateList [lsort -dic -decr [array names dateArray]]
	foreach date $dateList {
		set year [clock format $date -format %Y]
		set month [string trim [clock format $date -format %N]]
		foreach file $dateArray($date) {
			append monthJSONArray($year,$month) {"} $file {",}
		}
	}
	
	foreach month $months {
		set monthJSONArray($month) \{[string trimright $monthJSONArray($month) ,]\]\}
		set year [lindex [split $month ,] 0]
		append yearJSONArray($year) $monthJSONArray($month) ,
	}
	
	foreach year [lsort -decr [array names yearJSONArray]] {
		set yearJSONArray($year) \{[string trimright $yearJSONArray($year) ,]\]\}
		append JSONstring $yearJSONArray($year),
	}
	set JSONstring [string trimright $JSONstring ,]
	
set JSONstring  [subst -nocom  {

\{
  "sidebar": [
    \{
      "id": "blog",
      "contents": [
        \{
          "text": "Blog Archive",
          "href": "blog.qmd"
        \},
        $JSONstring
      ]
    \}
  ]
\}

	
}]

	set JSONstring [string trim $JSONstring]
#	exec yq -P << "\"website\": $JSONstring" > _metadata.yml
	set f [open _metadata.yml w]
	puts $f "\"website\": $JSONstring"
	close $f

#	set JSONstring [string range $JSONstring 16 end-5]

#	set qyml {.website.sidebar[0] = }
#	set quarto_yml [exec yq {del(.website.sidebar[0])} | yq -P "$qyml $JSONstring" < _quarto.yml]
	#set f [open _quarto.yml w]
	#puts -nonewline $f $quarto_yml
	#close $f
	
}

all: books _site
	
books: _site
	@puts "Rendering books:"
	@set pwd [pwd]
	@foreach book [glob -dir $pwd -type d books/*] {
		set bookname [file tail $book]
		cd $book
		if {![file isfile _quarto.yml]} {continue}
		if {[string index $bookname 0] eq {_}} {continue}
		puts "Rendering book: $bookname"
		#book_chapters
		try {
			#exec quarto render --output-dir "../../_site/books/$bookname" --to $(OUTPUT) -M HOME_URL:$(HOME_URL)
			exec quarto render --to $(OUTPUT) -M HOME_URL:$(HOME_URL)
		} on error outcome {
			puts $outcome
		}
	}
	@cd $pwd
	exec touch books

_site: *.yml *.qmd *.css books/*/*.* books/*/*/*.*
	@puts "Rendering site: $(PROFILE)"
	@blog_sidebar
	@try {
		exec quarto render --profile {$(PROFILE)}
	} on error outcome {
		puts $outcome
	}
	exec touch _site
	
